package publicadores;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;

/**
 * This class was generated by Apache CXF 3.4.4
 * 2021-11-02T02:10:41.924-03:00
 * Generated source version: 3.4.4
 *
 */
@WebService(targetNamespace = "http://publicadores/", name = "ControladorFuncionPublish")
@XmlSeeAlso({ObjectFactory.class, net.java.dev.jaxb.array.ObjectFactory.class})
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface ControladorFuncionPublish {

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/seleccionarFuncionRequest", output = "http://publicadores/ControladorFuncionPublish/seleccionarFuncionResponse", fault = {@FaultAction(className = FuncionNoValidaException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/seleccionarFuncion/Fault/FuncionNoValidaException")})
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public DtFuncion seleccionarFuncion(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws FuncionNoValidaException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarRegistrosRequest", output = "http://publicadores/ControladorFuncionPublish/listarRegistrosResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "http://publicadores/ControladorFuncionPublish/listarRegistros/Fault/Exception")})
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public DtRegistroCompletoArray listarRegistros(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws Exception_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/altaRegistroPaqueteRequest", output = "http://publicadores/ControladorFuncionPublish/altaRegistroPaqueteResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "http://publicadores/ControladorFuncionPublish/altaRegistroPaquete/Fault/Exception")})
    public void altaRegistroPaquete(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        java.lang.String arg2,
        @WebParam(partName = "arg3", name = "arg3")
        java.lang.String arg3
    ) throws Exception_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/chequearDisponibilidadNombreFuncionRequest", output = "http://publicadores/ControladorFuncionPublish/chequearDisponibilidadNombreFuncionResponse", fault = {@FaultAction(className = FuncionNoValidaException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/chequearDisponibilidadNombreFuncion/Fault/FuncionNoValidaException")})
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public boolean chequearDisponibilidadNombreFuncion(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws FuncionNoValidaException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarFuncionesEspectadorRequest", output = "http://publicadores/ControladorFuncionPublish/listarFuncionesEspectadorResponse")
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public DtFuncionArray listarFuncionesEspectador(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/altaFuncionRequest", output = "http://publicadores/ControladorFuncionPublish/altaFuncionResponse")
    public void altaFuncion()
;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarEspectaculosRequest", output = "http://publicadores/ControladorFuncionPublish/listarEspectaculosResponse", fault = {@FaultAction(className = PlataformaNoExisteException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/listarEspectaculos/Fault/PlataformaNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarEspectaculos(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws PlataformaNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/seleccionarEspectaculoRequest", output = "http://publicadores/ControladorFuncionPublish/seleccionarEspectaculoResponse", fault = {@FaultAction(className = EspectaculoNoValidoException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/seleccionarEspectaculo/Fault/EspectaculoNoValidoException")})
    public void seleccionarEspectaculo(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws EspectaculoNoValidoException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarEspectaculosPorArtistaRequest", output = "http://publicadores/ControladorFuncionPublish/listarEspectaculosPorArtistaResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "http://publicadores/ControladorFuncionPublish/listarEspectaculosPorArtista/Fault/Exception")})
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarEspectaculosPorArtista(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws Exception_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/altaRegistroRequest", output = "http://publicadores/ControladorFuncionPublish/altaRegistroResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "http://publicadores/ControladorFuncionPublish/altaRegistro/Fault/Exception")})
    public void altaRegistro(

        @WebParam(partName = "arg0", name = "arg0")
        net.java.dev.jaxb.array.IntArray arg0
    ) throws Exception_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarFuncionesRequest", output = "http://publicadores/ControladorFuncionPublish/listarFuncionesResponse")
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarFunciones()
;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarEspectadoresRequest", output = "http://publicadores/ControladorFuncionPublish/listarEspectadoresResponse")
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarEspectadores()
;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarPaquetesRequest", output = "http://publicadores/ControladorFuncionPublish/listarPaquetesResponse")
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarPaquetes(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/ingresarFuncionRequest", output = "http://publicadores/ControladorFuncionPublish/ingresarFuncionResponse", fault = {@FaultAction(className = FuncionNoValidaException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/ingresarFuncion/Fault/FuncionNoValidaException")})
    public void ingresarFuncion(

        @WebParam(partName = "arg0", name = "arg0")
        DtFuncion arg0,
        @WebParam(partName = "arg1", name = "arg1")
        byte[] arg1
    ) throws FuncionNoValidaException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/ingresarArtistaRequest", output = "http://publicadores/ControladorFuncionPublish/ingresarArtistaResponse", fault = {@FaultAction(className = Exception_Exception.class, value = "http://publicadores/ControladorFuncionPublish/ingresarArtista/Fault/Exception"), @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicadores/ControladorFuncionPublish/ingresarArtista/Fault/UsuarioNoExisteException")})
    public void ingresarArtista(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws Exception_Exception, UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicadores/ControladorFuncionPublish/listarFuncionesVigentesRequest", output = "http://publicadores/ControladorFuncionPublish/listarFuncionesVigentesResponse")
    @WebResult(name = "return", targetNamespace = "http://publicadores/", partName = "return")
    public net.java.dev.jaxb.array.StringArray listarFuncionesVigentes()
;
}
